# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Keysight M8195A AWG

# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Keysight_M8195_AWG

# default interface and address
interface: TCPIP

# Define if the instrument can be hardware triggered
support_arm: False
support_hardware_loop: False


[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: M8195A 

# Check instrument model id at startup (True or False). Default is False
check_model: True


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# default interface and address
tcpip_specify_port: True
tcpip_port: 5025

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 5

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
# Turn off arming mode
init: :INIT:CONT:ENAB SELF

# Final commands sent to the instrument when closing the driver
final: 


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Reference clock]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
combo_def_3: AXIe backplane
cmd_def_1: INT
cmd_def_2: EXT
cmd_def_3: AXI
set_cmd: :ROSC:SOUR
group: Reference clock
section: Reference

[External ref. range]
datatype: COMBO
def_value: 10 to 300 MHz
combo_def_1: 10 to 300 MHz
combo_def_2: 210 MHz to 17 GHz
cmd_def_1: RANG1
cmd_def_2: RANG2
set_cmd: :ROSC:RANG
state_quant: Reference clock
state_value_1: External
group: Reference clock
section: Reference

[External ref. frequency 1]
label: External ref. frequency
datatype: DOUBLE
unit: Hz
def_value: 100E6
low_lim: 10E6
high_lim: 300E6
set_cmd: :ROSC:RNG1:FREQ
state_quant: External ref. range
state_value_1: 10 to 300 MHz
group: Reference clock
section: Reference

[External ref. frequency 2]
label: External ref. frequency
datatype: DOUBLE
unit: Hz
def_value: 100E6
low_lim: 210E6
high_lim: 17E9
set_cmd: :ROSC:RNG2:FREQ
state_quant: External ref. range
state_value_1: 210 MHz to 17 GHz
group: Reference clock
section: Reference

[Sample frequency]
datatype: DOUBLE
unit: Hz
def_value: 65E9
low_lim: 53.76E9
high_lim: 65E9
set_cmd: :FREQ:RAST
group: Reference clock
section: Reference

[Delay]
datatype: DOUBLE
tooltip: Module delay, applies to all channels
unit: s
def_value: 0
low_lim: 0
high_lim: 10E-9
set_cmd: :ARM:MDEL
group: Output delay
section: Reference

[Run mode]
datatype: COMBO
def_value: Triggered
combo_def_1: Continuous
combo_def_2: Triggered
combo_def_3: Gated
group: Trigger
section: Trigger

[Trig event]
datatype: COMBO
def_value: Internal trigger
combo_def_1: Internal trigger
combo_def_2: Trig port
combo_def_3: Event port
cmd_def_1: INT
cmd_def_2: TRIG
cmd_def_3: EVEN
set_cmd: :ARM:TRIG:SOUR
state_quant: Run mode
state_value_1: Triggered
state_value_2: Gated
group: Trigger
section: Trigger

[Advance event]
datatype: COMBO
def_value: Event port
combo_def_1: Internal trigger
combo_def_2: Trig port
combo_def_3: Event port
cmd_def_1: INT
cmd_def_2: TRIG
cmd_def_3: EVEN
set_cmd: :TRIG:SOUR:ADV
state_quant: Run mode
state_value_1: Triggered
state_value_2: Gated
group: Trigger
section: Trigger

[Internal trig rate]
datatype: DOUBLE
unit: s
def_value: 1E6
low_lim: 0.1
high_lim: 18.1361607E6
set_cmd: :ARM:TRIG:FREQ
state_quant: Run mode
state_value_1: Triggered
state_value_2: Gated
group: Trigger
section: Trigger

[Trig/event mode]
datatype: COMBO
def_value: Synchronous
combo_def_1: Synchronous
combo_def_2: Asynchronous
cmd_def_1: SYNC
cmd_def_2: ASYN
set_cmd: :ARM:TRIG:OPER
group: Trig ports
section: Trigger

[Trig level]
datatype: DOUBLE
unit: V
def_value: 0.5
set_cmd: :ARM:TRIG:LEV
group: Trig ports
section: Trigger

[Trig slope]
datatype: COMBO
def_value: Positive
combo_def_1: Positive
combo_def_2: Negative
combo_def_3: Either
cmd_def_1: POS
cmd_def_2: NEG
cmd_def_3: EITH
set_cmd: :ARM:TRIG:SLOP
group: Trig ports
section: Trigger

[Event level]
datatype: DOUBLE
unit: V
def_value: 0.5
set_cmd: :ARM:EVEN:LEV
group: Trig ports
section: Trigger

[Event slope]
datatype: COMBO
def_value: Positive
combo_def_1: Positive
combo_def_2: Negative
combo_def_3: Either
cmd_def_1: POS
cmd_def_2: NEG
cmd_def_3: EITH
set_cmd: :ARM:EVEN:SLOP
group: Trig ports
section: Trigger

[Send trig event]
datatype: BUTTON
set_cmd: :TRIG:BEG
group: Force trigger
section: Trigger

[Send advance event]
datatype: BUTTON
set_cmd: :TRIG:ADV
group: Force trigger
section: Trigger

[Run]
label: Send run event
datatype: BUTTON
group: Force trigger
section: Trigger

[Channel mode]
datatype: COMBO
def_value: Four channel
combo_def_1: Single channel (1)
combo_def_2: Single channel (1) + markers (3,4)
combo_def_3: Dual channel (1,4)
combo_def_4: Dual channel duplicate (1-3,2-4)
combo_def_5: Dual channel (1,2) + markers (3,4)
combo_def_6: Four channel
cmd_def_1: SING
cmd_def_2: MARK
cmd_def_3: DUAL
cmd_def_4: DCD
cmd_def_5: DCM
cmd_def_6: FOUR
set_cmd: :INST:DACM
group: Channels
section: Channels

[Sample rate divider 1]
label: Sample rate divider
datatype: COMBO
def_value: 1
combo_def_1: 1
combo_def_2: 2
combo_def_3: 4
cmd_def_1: DIV1
cmd_def_2: DIV2
cmd_def_3: DIV4
set_cmd: :INST:MEM:EXT:RDIV
state_quant: Channel mode
state_value_1: Single channel (1)
state_value_2: Single channel (1) + markers (3,4)
group: Channels
section: Channels

[Sample rate divider 2]
label: Sample rate divider
datatype: COMBO
def_value: 2
combo_def_1: 2
combo_def_2: 4
cmd_def_1: DIV2
cmd_def_2: DIV4
set_cmd: :INST:MEM:EXT:RDIV
state_quant: Channel mode
state_value_1: Dual channel (1,4)
state_value_2: Dual channel (1,2) + markers (3,4)
group: Channels
section: Channels

[Sample rate divider 3]
label: Sample rate divider
datatype: COMBO
def_value: 2
combo_def_1: 2
cmd_def_1: DIV2
set_cmd: :INST:MEM:EXT:RDIV
state_quant: Channel mode
state_value_1: Dual channel duplicate (1-3,2-4)
group: Channels
section: Channels

[Sample rate divider 4]
label: Sample rate divider
datatype: COMBO
def_value: 4
combo_def_1: 4
cmd_def_1: DIV4
set_cmd: :INST:MEM:EXT:RDIV
state_quant: Channel mode
state_value_1: Four channel
group: Channels
section: Channels

[Truncate waveform if out of range]
datatype: BOOLEAN
def_value: 1
tooltip: If checked, the waveform will be automatically truncated to fit the AWG range
group: Channels
section: Channels

[Ch1 - Output]
label: Output
datatype: BOOLEAN
set_cmd: :OUTP1
group: Channel 1
section: Channels
[Ch1 - Range]
label: Range
datatype: DOUBLE
def_value: 1.0
low_lim: 0.075
high_lim: 1
unit: V
set_cmd: :VOLT1
group: Channel 1
section: Channels
[Ch1 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
low_lim: -0.5
high_lim: 0.5
set_cmd: :VOLT1:OFFS 
group: Channel 1
section: Channels

[Ch2 - Output]
label: Output
datatype: BOOLEAN
set_cmd: :OUTP2
group: Channel 2
section: Channels
state_quant: Channel mode
state_value_1: Dual channel duplicate (1-3,2-4)
state_value_2: Dual channel (1,2) + markers (3,4)
state_value_3: Four channel
[Ch2 - Range]
label: Range
datatype: DOUBLE
def_value: 1.0
low_lim: 0.075
high_lim: 1
unit: V
set_cmd: :VOLT2
group: Channel 2
section: Channels
state_quant: Channel mode
state_value_1: Dual channel duplicate (1-3,2-4)
state_value_2: Dual channel (1,2) + markers (3,4)
state_value_3: Four channel
[Ch2 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
low_lim: -0.5
high_lim: 0.5
set_cmd: :VOLT2:OFFS 
group: Channel 2
section: Channels
state_quant: Channel mode
state_value_1: Dual channel duplicate (1-3,2-4)
state_value_2: Dual channel (1,2) + markers (3,4)
state_value_3: Four channel

[Ch3 - Output]
label: Output
datatype: BOOLEAN
set_cmd: :OUTP3
group: Channel 3
section: Channels
state_quant: Channel mode
state_value_1: Single channel (1) + markers (3,4)
state_value_2: Dual channel duplicate (1-3,2-4)
state_value_3: Dual channel (1,2) + markers (3,4)
state_value_4: Four channel
[Ch3 - Range]
label: Range
datatype: DOUBLE
def_value: 1.0
low_lim: 0.075
high_lim: 1
unit: V
set_cmd: :VOLT3
group: Channel 3
section: Channels
state_quant: Channel mode
state_value_1: Single channel (1) + markers (3,4)
state_value_2: Dual channel duplicate (1-3,2-4)
state_value_3: Dual channel (1,2) + markers (3,4)
state_value_4: Four channel
[Ch3 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
low_lim: -0.5
high_lim: 0.5
set_cmd: :VOLT3:OFFS 
group: Channel 3
section: Channels
state_quant: Channel mode
state_value_1: Single channel (1) + markers (3,4)
state_value_2: Dual channel duplicate (1-3,2-4)
state_value_3: Dual channel (1,2) + markers (3,4)
state_value_4: Four channel

[Ch4 - Output]
label: Output
datatype: BOOLEAN
set_cmd: :OUTP4
group: Channel 4
section: Channels
state_quant: Channel mode
state_value_1: Single channel (1) + markers (3,4)
state_value_2: Dual channel (1,4)
state_value_3: Dual channel duplicate (1-3,2-4)
state_value_4: Dual channel (1,2) + markers (3,4)
state_value_5: Four channel
[Ch4 - Range]
label: Range
datatype: DOUBLE
def_value: 1.0
low_lim: 0.075
high_lim: 1
unit: V
set_cmd: :VOLT4
group: Channel 4
section: Channels
state_quant: Channel mode
state_value_1: Single channel (1) + markers (3,4)
state_value_2: Dual channel (1,4)
state_value_3: Dual channel duplicate (1-3,2-4)
state_value_4: Dual channel (1,2) + markers (3,4)
state_value_5: Four channel
[Ch4 - Offset]
label: Offset
datatype: DOUBLE
unit: V
def_value: 0.0
low_lim: -0.5
high_lim: 0.5
set_cmd: :VOLT4:OFFS 
group: Channel 4
section: Channels
state_quant: Channel mode
state_value_1: Single channel (1) + markers (3,4)
state_value_2: Dual channel (1,4)
state_value_3: Dual channel duplicate (1-3,2-4)
state_value_4: Dual channel (1,2) + markers (3,4)
state_value_5: Four channel

[Ch 1]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Channels
section: Channels

[Ch 2]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Channels
section: Channels

[Ch 3]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Channels
section: Channels

[Ch 4]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s
group: Channels
section: Channels
