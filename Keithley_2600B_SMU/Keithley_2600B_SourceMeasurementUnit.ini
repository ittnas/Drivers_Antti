## CHECK
# error query... problem with queue?

# Instrument driver configuration file.

[General settings]
# The name is shown in all the configuration windows
name: Keithley 2600B Source Measurement Unit
# This driver includes all instrument types of the 2600B series (single or double channel), 
# but does not include the TSP-Link(c) interface.

# The version string should be updated whenever changes are made to this config file
version: 0.4
# Only the Keithley 2614B has been tested on this version
# v0.4
# 	bug corrected for autoranging (autorange was bypassed by range)
#	power measurement set visible in the show_in_measurement_dlg option

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path:


[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: True

# List of models supported by this driver
model_str_1: 2601B
model_str_2: 2602B
model_str_3: 2604B
model_str_4: 2611B
model_str_5: 2612B
model_str_6: 2614B
model_str_7: 2634B
model_str_8: 2635B
model_str_9: 2636B

# Valid model strings returned by the instrument. Default value = model_str
model_id_1: Keithley Instruments Inc., Model 2601B
model_id_2: Keithley Instruments Inc., Model 2602B
model_id_3: Keithley Instruments Inc., Model 2604B
model_id_4: Keithley Instruments Inc., Model 2611B
model_id_5: Keithley Instruments Inc., Model 2612B
model_id_6: Keithley Instruments Inc., Model 2614B
model_id_7: Keithley Instruments Inc., Model 2634B
model_id_8: Keithley Instruments Inc., Model 2635B
model_id_9: Keithley Instruments Inc., Model 2636B

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: False

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 2

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: print(errorqueue.next())

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: 

# Final commands sent to the instrument when closing the driver
final: 

# Setting the commands corresponding to BOOLEAN quantities
str_false: 0.00000E+00
str_true: 1.00000E+00

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.



### SMUA
## SMUA Source
[SMUA Source Function]
datatype: COMBO
label: Function
show_in_measurement_dlg: False
permission: BOTH
def_value: Voltage
combo_def_1: Current
combo_def_2: Voltage
cmd_def_1: 0
cmd_def_2: 1
get_cmd: print(smua.source.func)
set_cmd: smua.source.func = <*>
group: Source
section: SMUA

# Current source
[SMUA Source Value (Current)]
datatype: DOUBLE
label: Value
unit: A
show_in_measurement_dlg: True
def_value: 0
permission: BOTH
get_cmd: print(smua.source.leveli)
set_cmd: smua.source.leveli = <*>
sweep_cmd: ***REPEAT SET*** 0.05
group: Source
section: SMUA
state_quant: SMUA Source Function
state_value_1: Current

[SMUA Source Autorange (Current)]
datatype: BOOLEAN
label: Autorange
show_in_measurement_dlg: False
def_value: False
permission: BOTH
set_cmd: smua.source.autorangei = <*>
get_cmd: print(smua.source.autorangei)
group: Source
section: SMUA
state_quant: SMUA Source Function
state_value_1: Current

[SMUA Source Range (0) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smua.source.rangei = <*>
get_cmd: print(smua.source.rangei)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Current)
state_value_1: False
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Source Low Range (0) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smua.source.lowrangei = <*>
get_cmd: print(smua.source.lowrangei)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Current)
state_value_1: True
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Source Range (1) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smua.source.rangei = <*>
get_cmd: print(smua.source.rangei)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Current)
state_value_1: False
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B

[SMUA Source Low Range (1) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smua.source.lowrangei = <*>
get_cmd: print(smua.source.lowrangei)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Current)
state_value_1: True
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B

[SMUA Source Range (3) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smua.source.rangei = <*>
get_cmd: print(smua.source.rangei)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Current)
state_value_1: False
model_value_1: 2634B
model_value_2: 2635B
model_value_3: 2636B

[SMUA Source Low Range (3) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smua.source.lowrangei = <*>
get_cmd: print(smua.source.lowrangei)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Current)
state_value_1: True
model_value_1: 2634B
model_value_2: 2635B
model_value_3: 2636B

[SMUA Source Limit (Current)]
datatype: DOUBLE
label: Limit
show_in_measurement_dlg: False
unit: V
permission: BOTH
def_value: 20
get_cmd: print(smua.source.limitv)
set_cmd: smua.source.limitv = <*>
group: Source
section: SMUA
state_quant: SMUA Source Function
state_value_1: Current

# Voltage source
[SMUA Source Value (Voltage)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: True
def_value: 0
unit: V
permission: BOTH
get_cmd: print(smua.source.levelv)
set_cmd: smua.source.levelv = <*>
sweep_cmd: ***REPEAT SET*** 0.05
group: Source
section: SMUA
state_quant: SMUA Source Function
state_value_1: Voltage

[SMUA Source Autorange (Voltage)]
datatype: BOOLEAN
label: Autorange
show_in_measurement_dlg: False
def_value: False
permission: BOTH
set_cmd: smua.source.autorangev = <*>
get_cmd: print(smua.source.autorangev)
group: Source
section: SMUA
state_quant: SMUA Source Function
state_value_1: Voltage

[SMUA Source Range (0) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smua.source.rangev = <*>
get_cmd: print(smua.source.rangev)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Voltage)
state_value_1: False
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Source Low Range (0) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smua.source.lowrangev = <*>
get_cmd: print(smua.source.lowrangev)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Voltage)
state_value_1: True
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Source Range (13) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smua.source.rangev = <*>
get_cmd: print(smua.source.rangev)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Voltage)
state_value_1: False
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B
model_value_4: 2634B
model_value_5: 2635B
model_value_6: 2636B

[SMUA Source Low Range (13) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smua.source.lowrangev = <*>
get_cmd: print(smua.source.lowrangev)
group: Source
section: SMUA
state_quant: SMUA Source Autorange (Voltage)
state_value_1: True
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B
model_value_4: 2634B
model_value_5: 2635B
model_value_6: 2636B

[SMUA Source Limit (Voltage)]
datatype: DOUBLE
label: Limit
show_in_measurement_dlg: False
unit: A
permission: BOTH
def_value: 0.1
get_cmd: print(smua.source.limiti)
set_cmd: smua.source.limiti = <*>
group: Source
section: SMUA
state_quant: SMUA Source Function
state_value_1: Voltage


## SMUA Source Output
[SMUA Source Output]
datatype: COMBO
label: Output
show_in_measurement_dlg: False
permission: BOTH
def_value: off
combo_def_1: off
combo_def_2: on
combo_def_3: high Z
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
get_cmd: print(smua.source.output)
set_cmd: smua.source.output = <*>
group: Source Output
section: SMUA

[SMUA Source Off Mode]
datatype: COMBO
label: Off Mode
show_in_measurement_dlg: False
permission: BOTH
def_value: normal
combo_def_1: normal
combo_def_2: zero
combo_def_3: high Z
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
get_cmd: print(smua.source.offmode)
set_cmd: smua.source.offmode = <*>
group: Source Output
section: SMUA

[SMUA Source Off Function]
datatype: COMBO
label: Off Function
tooltip: source function when output off (DC Amps = source 0 A; DC Volts = source 0 V)
show_in_measurement_dlg: False
def_value: DC Volts
combo_def_1: DC Amps
combo_def_2: DC Volts
cmd_def_1: 0
cmd_def_2: 1
permission: BOTH
get_cmd: print(smua.source.offfunc)
set_cmd: smua.source.offfunc = <*>
group: Source Output
section: SMUA

[SMUA Source Off Limit (DC Amps)]
datatype: DOUBLE
label: Off Limit
unit: V
show_in_measurement_dlg: False
def_value: 20
permission: BOTH
get_cmd: print(smua.source.offlimitv)
set_cmd: smua.source.offlimitv = <*>
group: Source Output
section: SMUA
state_quant: SMUA Source Off Function
state_value_1: DC Amps

[SMUA Source Off Limit (DC Volts)]
datatype: DOUBLE
label: Off Limit
unit: A
show_in_measurement_dlg: False
def_value: 1E-3
permission: BOTH
get_cmd: print(smua.source.offlimiti)
set_cmd: smua.source.offlimiti = <*>
group: Source Output
section: SMUA
state_quant: SMUA Source Off Function
state_value_1: DC Volts


## SMUA measurement options
[SMUA Sense Mode]
datatype: COMBO
label: Sense Mode
show_in_measurement_dlg: False
def_value: 2-wires
combo_def_1: 2-wires
combo_def_2: 4-wires
combo_def_3: calibration
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smua.sense = <*>
get_cmd: print(smua.sense)
group: Measurement options
section: SMUA

[SMUA Measure Integration Aperture]
datatype: DOUBLE
label: Integration Aperture
show_in_measurement_dlg: False
unit: NPLC
def_value: 1.0
low_lim: 0.001
high_lim: 25
permission: BOTH
set_cmd: smua.measure.nplc = <*>
get_cmd: print(smua.measure.nplc)
group: Measurement options
section: SMUA

# Measure Delay no necessary: the delay is set by the measurement program
# [SMUA Measure Delay]
# datatype: DOUBLE
# label: Delay
# show_in_measurement_dlg: False
# unit: s
# tooltip: delay before measurement, -1 for automatic delay value
# def_value: 0
# low_lim: -1
# permission: BOTH
# set_cmd: smua.measure.delay = <*>
# get_cmd: print(smua.measure.delay)
# group: Measurement options
# section: SMUA

# Measure Count and Measur Interval not necessary: the driver only reads single values 
# [SMUA Measure Count]
# datatype: DOUBLE
# label: Measure count
# show_in_measurement_dlg: False
# def_value: 1
# low_lim: 1
# permission: BOTH
# set_cmd: smua.measure.count = <*>
# get_cmd: print(smua.measure.count)
# group: Measurement options
# section: SMUA

# [SMUA Measure Interval]
# datatype: DOUBLE
# label: Measure interval
# show_in_measurement_dlg: False
# unit: s
# tooltip: interval between multiple measurements
# def_value: 0
# low_lim: 0
# high_lim: 1
# permission: BOTH
# set_cmd: smua.measure.interval = <*>
# get_cmd: print(smua.measure.interval)
# group: Measurement options
# section: SMUA

[SMUA Measure Filter Enabled]
datatype: BOOLEAN
label: Filter Enabled
show_in_measurement_dlg: False
def_value: False
permission: BOTH
set_cmd: smua.measure.filter.enable = <*>
get_cmd: print(smua.measure.filter.enable)
group: Measurement options
section: SMUA

[SMUA Measure Filter Type]
datatype: COMBO
label: Filter Type
show_in_measurement_dlg: False
def_value: moving average
combo_def_1: moving average
combo_def_2: repeat average
combo_def_3: median
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smua.measure.filter.type = <*>
get_cmd: print(smua.measure.filter.type)
group: Measurement options
section: SMUA

[SMUA Measure Filter Count]
datatype: DOUBLE
label: Filter Count
show_in_measurement_dlg: False
def_value: 1
low_lim: 1
high_lim: 100
permission: BOTH
set_cmd: smua.measure.filter.count = <*>
get_cmd: print(smua.measure.filter.count)
group: Measurement options
section: SMUA

[SMUA Measure Autozero]
datatype: COMBO
label: Autozero
show_in_measurement_dlg: False
def_value: off
combo_def_1: off
combo_def_2: once
combo_def_3: auto
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smua.measure.autozero = <*>
get_cmd: print(smua.measure.autozero)
group: Measurement options
section: SMUA

## SMUA Voltage measurement
[SMUA Measure Value (Voltage)]
datatype: DOUBLE
label: Value
unit: V
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smua.measure.v())
group: Voltage measurement
section: SMUA

[SMUA Measure Autorange (Voltage)]
datatype: COMBO
label: Autorange
show_in_measurement_dlg: False
def_value: off
combo_def_1: off
combo_def_2: on
combo_def_3: follow limit
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smua.measure.autorangev = <*>
get_cmd: print(smua.measure.autorangev)
group: Voltage measurement
section: SMUA

[SMUA Measure Range (0) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smua.measure.rangev = <*>
get_cmd: print(smua.measure.rangev)
group: Voltage measurement
section: SMUA
state_quant: SMUA Measure Autorange (Voltage)
state_value_1: off
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Measure Low Range (0) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smua.measure.lowrangev = <*>
get_cmd: print(smua.measure.lowrangev)
group: Voltage measurement
section: SMUA
state_quant: SMUA Measure Autorange (Voltage)
state_value_1: on
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Measure Range (13) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smua.measure.rangev = <*>
get_cmd: print(smua.measure.rangev)
group: Voltage measurement
section: SMUA
state_quant: SMUA Measure Autorange (Voltage)
state_value_1: off
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B
model_value_4: 2634B
model_value_5: 2635B
model_value_6: 2636B

[SMUA Measure Low Range (13) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smua.measure.lowrangev = <*>
get_cmd: print(smua.measure.lowrangev)
group: Voltage measurement
section: SMUA
state_quant: SMUA Measure Autorange (Voltage)
state_value_1: on
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B
model_value_4: 2634B
model_value_5: 2635B
model_value_6: 2636B

[SMUA Measure Relative Enable (Voltage)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smua.measure.rel.enablev)
set_cmd: smua.measure.rel.enablev = <*>
group: Voltage measurement
section: SMUA

[SMUA Measure Relative Level (Voltage)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: V
def_value: 0
permission: BOTH
get_cmd: print(smua.measure.rel.levelv)
set_cmd: smua.measure.rel.levelv = <*>
group: Voltage measurement
section: SMUA

## SMUA Current measurement
[SMUA Measure Value (Current)]
datatype: DOUBLE
label: Value
unit: A
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smua.measure.i())
group: Current measurement
section: SMUA

[SMUA Measure Autorange (Current)]
datatype: COMBO
label: Autorange
show_in_measurement_dlg: False
def_value: off
combo_def_1: off
combo_def_2: on
combo_def_3: follow limit
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smua.measure.autorangei = <*>
get_cmd: print(smua.measure.autorangei)
group: Current measurement
section: SMUA

[SMUA Measure Range (0) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smua.measure.rangei = <*>
get_cmd: print(smua.measure.rangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: off
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Measure Low Range (0) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smua.measure.lowrangei = <*>
get_cmd: print(smua.measure.lowrangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: on
model_value_1: 2601B
model_value_2: 2602B
model_value_3: 2604B

[SMUA Measure Range (1) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smua.measure.rangei = <*>
get_cmd: print(smua.measure.rangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: off
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B

[SMUA Measure Low Range (1) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smua.measure.lowrangei = <*>
get_cmd: print(smua.measure.lowrangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: on
model_value_1: 2611B
model_value_2: 2612B
model_value_3: 2614B

[SMUA Measure Range (34) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smua.measure.rangei = <*>
get_cmd: print(smua.measure.rangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: off
model_value_1: 2634B

[SMUA Measure Low Range (34) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smua.measure.lowrangei = <*>
get_cmd: print(smua.measure.lowrangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: on
model_value_1: 2634B

[SMUA Measure Range (35-36) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 pA
combo_def_2: 1 nA
combo_def_3: 10 nA
combo_def_4: 100 nA
combo_def_5: 1 uA
combo_def_6: 10 uA
combo_def_7: 100 uA
combo_def_8: 1 mA
combo_def_9: 10 mA
combo_def_10: 100 mA
combo_def_11: 1 A
combo_def_12: 1.5 A
combo_def_13: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-10
cmd_def_2: 1E-9
cmd_def_3: 1E-8
cmd_def_4: 1E-7
cmd_def_5: 1E-6
cmd_def_6: 1E-5
cmd_def_7: 1E-4
cmd_def_8: 1E-3
cmd_def_9: 1E-2
cmd_def_10: 1E-1
cmd_def_11: 1
cmd_def_12: 1.5
cmd_def_13: 10
permission: BOTH
set_cmd: smua.measure.rangei = <*>
get_cmd: print(smua.measure.rangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: off
model_value_1: 2635B
model_value_2: 2636B

[SMUA Measure Low Range (35-36) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 pA
combo_def_2: 1 nA
combo_def_3: 10 nA
combo_def_4: 100 nA
combo_def_5: 1 uA
combo_def_6: 10 uA
combo_def_7: 100 uA
combo_def_8: 1 mA
combo_def_9: 10 mA
combo_def_10: 100 mA
combo_def_11: 1 A
combo_def_12: 1.5 A
combo_def_13: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-10
cmd_def_2: 1E-9
cmd_def_3: 1E-8
cmd_def_4: 1E-7
cmd_def_5: 1E-6
cmd_def_6: 1E-5
cmd_def_7: 1E-4
cmd_def_8: 1E-3
cmd_def_9: 1E-2
cmd_def_10: 1E-1
cmd_def_11: 1
cmd_def_12: 1.5
cmd_def_13: 10
permission: BOTH
set_cmd: smua.measure.lowrangei = <*>
get_cmd: print(smua.measure.lowrangei)
group: Current measurement
section: SMUA
state_quant: SMUA Measure Autorange (Current)
state_value_1: on
model_value_1: 2635B
model_value_2: 2636B

[SMUA Measure Relative Enable (Current)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smua.measure.rel.enablei)
set_cmd: smua.measure.rel.enablei = <*>
group: Current measurement
section: SMUA

[SMUA Measure Relative Level (Current)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: A
def_value: 0
permission: BOTH
get_cmd: print(smua.measure.rel.leveli)
set_cmd: smua.measure.rel.leveli = <*>
group: Current measurement
section: SMUA

## Resistance measurement
[SMUA Measure Value (Resistance)]
datatype: DOUBLE
label: Value
unit: Ohm
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smua.measure.r())
group: Resistance measurement
section: SMUA

[SMUA Measure Relative Enable (Resistance)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smua.measure.rel.enabler)
set_cmd: smua.measure.rel.enabler = <*>
group: Resistance measurement
section: SMUA

[SMUA Measure Relative Level (Resistance)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: Ohm
def_value: 0
permission: BOTH
get_cmd: print(smua.measure.rel.levelr)
set_cmd: smua.measure.rel.levelr = <*>
group: Resistance measurement
section: SMUA

## Power measurement
[SMUA Measure Value (Power)]
datatype: DOUBLE
label: Value
unit: W
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smua.measure.p())
group: Power measurement
section: SMUA

[SMUA Measure Relative Enable (Power)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smua.measure.rel.enablep)
set_cmd: smua.measure.rel.enablep = <*>
group: Power measurement
section: SMUA

[SMUA Measure Relative Level (Power)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: W
def_value: 0
permission: BOTH
get_cmd: print(smua.measure.rel.levelp)
set_cmd: smua.measure.rel.levelp = <*>
group:Power measurement
section: SMUA




### SMUB
## SMUB Source
[SMUB Source Function]
datatype: COMBO
label: Function
permission: BOTH
show_in_measurement_dlg: False
def_value: Voltage
combo_def_1: Current
combo_def_2: Voltage
cmd_def_1: 0
cmd_def_2: 1
get_cmd: print(smub.source.func)
set_cmd: smub.source.func = <*>
group: Source
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

# Current source
[SMUB Source Value (Current)]
datatype: DOUBLE
label: Value
unit: A
show_in_measurement_dlg: True
def_value: 0
permission: BOTH
get_cmd: print(smub.source.leveli)
set_cmd: smub.source.leveli = <*>
sweep_cmd: ***REPEAT SET*** 0.05
group: Source
section: SMUB
state_quant: SMUB Source Function
state_value_1: Current
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Autorange (Current)]
datatype: BOOLEAN
label: Autorange
show_in_measurement_dlg: False
def_value: False
permission: BOTH
set_cmd: smub.source.autorangei = <*>
get_cmd: print(smub.source.autorangei)
group: Source
section: SMUB
state_quant: SMUB Source Function
state_value_1: Current
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Range (0) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smub.source.rangei = <*>
get_cmd: print(smub.source.rangei)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Current)
state_value_1: False
model_value_1: 2602B
model_value_2: 2604B

[SMUB Source Low Range (0) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smub.source.lowrangei = <*>
get_cmd: print(smub.source.lowrangei)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Current)
state_value_1: True
model_value_1: 2602B
model_value_2: 2604B

[SMUB Source Range (1) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smub.source.rangei = <*>
get_cmd: print(smub.source.rangei)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Current)
state_value_1: False
model_value_1: 2612B
model_value_2: 2614B

[SMUB Source Low Range (1) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smub.source.lowrangei = <*>
get_cmd: print(smub.source.lowrangei)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Current)
state_value_1: True
model_value_2: 2612B
model_value_3: 2614B

[SMUB Source Range (3) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smub.source.rangei = <*>
get_cmd: print(smub.source.rangei)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Current)
state_value_1: False
model_value_1: 2634B
model_value_2: 2636B

[SMUB Source Low Range (3) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smub.source.lowrangei = <*>
get_cmd: print(smub.source.lowrangei)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Current)
state_value_1: True
model_value_1: 2634B
model_value_2: 2636B

[SMUB Source Limit (Current)]
datatype: DOUBLE
label: Limit
unit: V
show_in_measurement_dlg: False
permission: BOTH
def_value: 20
get_cmd: print(smub.source.limitv)
set_cmd: smub.source.limitv = <*>
group: Source
section: SMUB
state_quant: SMUB Source Function
state_value_1: Current
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

# Voltage source
[SMUB Source Value (Voltage)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: True
def_value: 0
unit: V
permission: BOTH
get_cmd: print(smub.source.levelv)
set_cmd: smub.source.levelv = <*>
sweep_cmd: ***REPEAT SET*** 0.05
group: Source
section: SMUB
state_quant: SMUB Source Function
state_value_1: Voltage
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Autorange (Voltage)]
datatype: BOOLEAN
label: Autorange
show_in_measurement_dlg: False
def_value: False
permission: BOTH
set_cmd: smub.source.autorangev = <*>
get_cmd: print(smub.source.autorangev)
group: Source
section: SMUB
state_quant: SMUB Source Function
state_value_1: Voltage
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Range (0) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smub.source.rangev = <*>
get_cmd: print(smub.source.rangev)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Voltage)
state_value_1: False
model_value_1: 2602B
model_value_2: 2604B

[SMUB Source Low Range (0) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smub.source.lowrangev = <*>
get_cmd: print(smub.source.lowrangev)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Voltage)
state_value_1: True
model_value_1: 2602B
model_value_2: 2604B

[SMUB Source Range (1-3) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smub.source.rangev = <*>
get_cmd: print(smub.source.rangev)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Voltage)
state_value_1: False
model_value_1: 2612B
model_value_2: 2614B
model_value_3: 2634B
model_value_4: 2636B

[SMUB Source Low Range (1-3) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smub.source.lowrangev = <*>
get_cmd: print(smub.source.lowrangev)
group: Source
section: SMUB
state_quant: SMUB Source Autorange (Voltage)
state_value_1: True
model_value_1: 2612B
model_value_2: 2614B
model_value_3: 2634B
model_value_4: 2636B

[SMUB Source Limit (Voltage)]
datatype: DOUBLE
label: Limit
unit: A
show_in_measurement_dlg: False
permission: BOTH
def_value: 0.1
get_cmd: print(smub.source.limiti)
set_cmd: smub.source.limiti = <*>
group: Source
section: SMUB
state_quant: SMUB Source Function
state_value_1: Voltage
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B


## SMUB Source Output
[SMUB Source Output]
datatype: COMBO
label: Output
permission: BOTH
show_in_measurement_dlg: False
def_value: off
combo_def_1: off
combo_def_2: on
combo_def_3: high Z
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
get_cmd: print(smub.source.output)
set_cmd: smub.source.output = <*>
group: Source Output
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Off Mode]
datatype: COMBO
label: Off Mode
permission: BOTH
show_in_measurement_dlg: False
def_value: normal
combo_def_1: normal
combo_def_2: zero
combo_def_3: high Z
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
get_cmd: print(smub.source.offmode)
set_cmd: smub.source.offmode = <*>
group: Source Output
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Off Function]
datatype: COMBO
label: Off Function
tooltip: source function when output off (DC Amps = source 0 A; DC Volts = source 0 V)
show_in_measurement_dlg: False
def_value: DC Volts
combo_def_1: DC Amps
combo_def_2: DC Volts
cmd_def_1: 0
cmd_def_2: 1
permission: BOTH
get_cmd: print(smub.source.offfunc)
set_cmd: smub.source.offfunc = <*>
group: Source Output
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Off Limit (DC Amps)]
datatype: DOUBLE
label: Off Limit
unit: V
show_in_measurement_dlg: False
def_value: 20
permission: BOTH
get_cmd: print(smub.source.offlimitv)
set_cmd: smub.source.offlimitv = <*>
group: Source Output
section: SMUB
state_quant: SMUB Source Off Function
state_value_1: DC Amps
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Source Off Limit (DC Volts)]
datatype: DOUBLE
label: Off Limit
unit: A
show_in_measurement_dlg: False
def_value: 1E-3
permission: BOTH
get_cmd: print(smub.source.offlimiti)
set_cmd: smub.source.offlimiti = <*>
group: Source Output
section: SMUB
state_quant: SMUB Source Off Function
state_value_1: DC Volts
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B


## SMUB measurement options
[SMUB Sense Mode]
datatype: COMBO
label: Sense Mode
show_in_measurement_dlg: False
def_value: 2-wires
combo_def_1: 2-wires
combo_def_2: 4-wires
combo_def_3: calibration
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smub.sense = <*>
get_cmd: print(smub.sense)
group: Measurement options
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Integration Aperture]
datatype: DOUBLE
label: Integration Aperture
show_in_measurement_dlg: False
unit: NPLC
def_value: 1.0
low_lim: 0.001
high_lim: 25
permission: BOTH
set_cmd: smub.measure.nplc = <*>
get_cmd: print(smub.measure.nplc)
group: Measurement options
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

# Measure Delay no necessary: the delay is set by the measurement program
# [SMUB Measure Delay]
# datatype: DOUBLE
# label: Delay
# show_in_measurement_dlg: False
# unit: s
# tooltip: delay before measurement, -1 for automatic delay value
# def_value: 0
# low_lim: -1
# permission: BOTH
# set_cmd: smub.measure.delay = <*>
# get_cmd: print(smub.measure.delay)
# group: Measurement options
# section: SMUB
# model_value_1: 2602B
# model_value_2: 2604B
# model_value_3: 2612B
# model_value_4: 2614B
# model_value_5: 2634B
# model_value_6: 2636B

# Measure Count and Measur Interval not necessary: the driver only reads single values 
# [SMUB Measure Count]
# datatype: DOUBLE
# label: Measure count
# show_in_measurement_dlg: False
# def_value: 1
# low_lim: 1
# permission: BOTH
# set_cmd: smub.measure.count = <*>
# get_cmd: print(smub.measure.count)
# group: Measurement options
# section: SMUB
# model_value_1: 2602B
# model_value_2: 2604B
# model_value_3: 2612B
# model_value_4: 2614B
# model_value_5: 2634B
# model_value_6: 2636B

# [SMUB Measure Interval]
# datatype: DOUBLE
# label: Measure interval
# show_in_measurement_dlg: False
# unit: s
# tooltip: interval between multiple measurements
# def_value: 0
# low_lim: 0
# high_lim: 1
# permission: BOTH
# set_cmd: smub.measure.interval = <*>
# get_cmd: print(smub.measure.interval)
# group: Measurement options
# section: SMUB
# model_value_1: 2602B
# model_value_2: 2604B
# model_value_3: 2612B
# model_value_4: 2614B
# model_value_5: 2634B
# model_value_6: 2636B

[SMUB Measure Filter Enabled]
datatype: BOOLEAN
label: Filter Enabled
show_in_measurement_dlg: False
def_value: False
permission: BOTH
set_cmd: smub.measure.filter.enable = <*>
get_cmd: print(smub.measure.filter.enable)
group: Measurement options
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Filter Type]
datatype: COMBO
label: Filter Type
show_in_measurement_dlg: False
def_value: moving average
combo_def_1: moving average
combo_def_2: repeat average
combo_def_3: median
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smub.measure.filter.type = <*>
get_cmd: print(smub.measure.filter.type)
group: Measurement options
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Filter Count]
datatype: DOUBLE
label: Filter Count
show_in_measurement_dlg: False
def_value: 1
low_lim: 1
high_lim: 100
permission: BOTH
set_cmd: smub.measure.filter.count = <*>
get_cmd: print(smub.measure.filter.count)
group: Measurement options
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Autozero]
datatype: COMBO
label: Autozero
show_in_measurement_dlg: False
def_value: off
combo_def_1: off
combo_def_2: once
combo_def_3: auto
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smub.measure.autozero = <*>
get_cmd: print(smub.measure.autozero)
group: Measurement options
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

## SMUB Voltage measurement
[SMUB Measure Value (Voltage)]
datatype: DOUBLE
label: Value
unit: V
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smub.measure.v())
group: Voltage measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Autorange (Voltage)]
datatype: COMBO
label: Autorange
show_in_measurement_dlg: False
def_value: off
combo_def_1: off
combo_def_2: on
combo_def_3: follow limit
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smub.measure.autorangev = <*>
get_cmd: print(smub.measure.autorangev)
group: Voltage measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Range (0) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smub.measure.rangev = <*>
get_cmd: print(smub.measure.rangev)
group: Voltage measurement
section: SMUB
state_quant: SMUB Measure Autorange (Voltage)
state_value_1: off
model_value_1: 2602B
model_value_2: 2604B

[SMUB Measure Low Range (0) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 mV
combo_def_1: 100 mV
combo_def_2: 1 V
combo_def_3: 6 V
combo_def_4: 40 V
cmd_def_1: 0.1
cmd_def_2: 1
cmd_def_3: 6
cmd_def_4: 40
permission: BOTH
set_cmd: smub.measure.lowrangev = <*>
get_cmd: print(smub.measure.lowrangev)
group: Voltage measurement
section: SMUB
state_quant: SMUB Measure Autorange (Voltage)
state_value_1: on
model_value_1: 2602B
model_value_2: 2604B

[SMUB Measure Range (1-3) (Voltage)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smub.measure.rangev = <*>
get_cmd: print(smub.measure.rangev)
group: Voltage measurement
section: SMUB
state_quant: SMUB Measure Autorange (Voltage)
state_value_1: off
model_value_1: 2612B
model_value_2: 2614B
model_value_3: 2634B
model_value_4: 2636B

[SMUB Measure Low Range (1-3) (Voltage)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 200 mV
combo_def_1: 200 mV
combo_def_2: 2 V
combo_def_3: 20 V
combo_def_4: 200 V
# for 200 V, check if switch is present
cmd_def_1: 0.2
cmd_def_2: 2
cmd_def_3: 20
cmd_def_4: 200
permission: BOTH
set_cmd: smub.measure.lowrangev = <*>
get_cmd: print(smub.measure.lowrangev)
group: Voltage measurement
section: SMUB
state_quant: SMUB Measure Autorange (Voltage)
state_value_1: on
model_value_1: 2612B
model_value_2: 2614B
model_value_3: 2634B
model_value_4: 2636B

[SMUB Measure Relative Enable (Voltage)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smub.measure.rel.enablev)
set_cmd: smub.measure.rel.enablev = <*>
group: Voltage measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Relative Level (Voltage)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: V
def_value: 0
permission: BOTH
get_cmd: print(smub.measure.rel.levelv)
set_cmd: smub.measure.rel.levelv = <*>
group: Voltage measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

## SMUB Current measurement
[SMUB Measure Value (Current)]
datatype: DOUBLE
label: Value
unit: A
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smub.measure.i())
group: Current measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Autorange (Current)]
datatype: COMBO
label: Autorange
show_in_measurement_dlg: False
def_value: off
combo_def_1: off
combo_def_2: on
combo_def_3: follow limit
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
permission: BOTH
set_cmd: smub.measure.autorangei = <*>
get_cmd: print(smub.measure.autorangei)
group: Current measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Range (0) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smub.measure.rangei = <*>
get_cmd: print(smub.measure.rangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: off
model_value_1: 2602B
model_value_2: 2604B

[SMUB Measure Low Range (0) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 3 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 3
cmd_def_10: 10
permission: BOTH
set_cmd: smub.measure.lowrangei = <*>
get_cmd: print(smub.measure.lowrangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: on
model_value_1: 2602B
model_value_2: 2604B

[SMUB Measure Range (1) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 mA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smub.measure.rangei = <*>
get_cmd: print(smub.measure.rangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: off
model_value_1: 2612B
model_value_2: 2614B

[SMUB Measure Low Range (1) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 nA
combo_def_2: 1 uA
combo_def_3: 10 uA
combo_def_4: 100 uA
combo_def_5: 1 mA
combo_def_6: 10 mA
combo_def_7: 100 mA
combo_def_8: 1 A
combo_def_9: 1.5 A
combo_def_10: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-7
cmd_def_2: 1E-6
cmd_def_3: 1E-5
cmd_def_4: 1E-4
cmd_def_5: 1E-3
cmd_def_6: 1E-2
cmd_def_7: 1E-1
cmd_def_8: 1
cmd_def_9: 1.5
cmd_def_10: 10
permission: BOTH
set_cmd: smub.measure.lowrangei = <*>
get_cmd: print(smub.measure.lowrangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: on
model_value_1: 2612B
model_value_2: 2614B

[SMUB Measure Range (34) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smub.measure.rangei = <*>
get_cmd: print(smub.measure.rangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: off
model_value_1: 2634B

[SMUB Measure Low Range (34) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 1 nA
combo_def_2: 10 nA
combo_def_3: 100 nA
combo_def_4: 1 uA
combo_def_5: 10 uA
combo_def_6: 100 uA
combo_def_7: 1 mA
combo_def_8: 10 mA
combo_def_9: 100 mA
combo_def_10: 1 A
combo_def_11: 1.5 A
combo_def_12: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-9
cmd_def_2: 1E-8
cmd_def_3: 1E-7
cmd_def_4: 1E-6
cmd_def_5: 1E-5
cmd_def_6: 1E-4
cmd_def_7: 1E-3
cmd_def_8: 1E-2
cmd_def_9: 1E-1
cmd_def_10: 1
cmd_def_11: 1.5
cmd_def_12: 10
permission: BOTH
set_cmd: smub.measure.lowrangei = <*>
get_cmd: print(smub.measure.lowrangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: on
model_value_1: 2634B

[SMUB Measure Range (35-36) (Current)]
datatype: COMBO
label: Range
show_in_measurement_dlg: False
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 pA
combo_def_2: 1 nA
combo_def_3: 10 nA
combo_def_4: 100 nA
combo_def_5: 1 uA
combo_def_6: 10 uA
combo_def_7: 100 uA
combo_def_8: 1 mA
combo_def_9: 10 mA
combo_def_10: 100 mA
combo_def_11: 1 A
combo_def_12: 1.5 A
combo_def_13: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-10
cmd_def_2: 1E-9
cmd_def_3: 1E-8
cmd_def_4: 1E-7
cmd_def_5: 1E-6
cmd_def_6: 1E-5
cmd_def_7: 1E-4
cmd_def_8: 1E-3
cmd_def_9: 1E-2
cmd_def_10: 1E-1
cmd_def_11: 1
cmd_def_12: 1.5
cmd_def_13: 10
permission: BOTH
set_cmd: smub.measure.rangei = <*>
get_cmd: print(smub.measure.rangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: off
model_value_1: 2636B

[SMUB Measure Low Range (35-36) (Current)]
datatype: COMBO
label: Low range
show_in_measurement_dlg: False
tooltip: lowest measurement range when the instrument is autoranging
# available and default values depend on instrument model!
def_value: 100 nA
combo_def_1: 100 pA
combo_def_2: 1 nA
combo_def_3: 10 nA
combo_def_4: 100 nA
combo_def_5: 1 uA
combo_def_6: 10 uA
combo_def_7: 100 uA
combo_def_8: 1 mA
combo_def_9: 10 mA
combo_def_10: 100 mA
combo_def_11: 1 A
combo_def_12: 1.5 A
combo_def_13: 10 A
# 10 A only available in pulse mode!
cmd_def_1: 1E-10
cmd_def_2: 1E-9
cmd_def_3: 1E-8
cmd_def_4: 1E-7
cmd_def_5: 1E-6
cmd_def_6: 1E-5
cmd_def_7: 1E-4
cmd_def_8: 1E-3
cmd_def_9: 1E-2
cmd_def_10: 1E-1
cmd_def_11: 1
cmd_def_12: 1.5
cmd_def_13: 10
permission: BOTH
set_cmd: smub.measure.lowrangei = <*>
get_cmd: print(smub.measure.lowrangei)
group: Current measurement
section: SMUB
state_quant: SMUB Measure Autorange (Current)
state_value_1: on
model_value_1: 2636B

[SMUB Measure Relative Enable (Current)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smub.measure.rel.enablei)
set_cmd: smub.measure.rel.enablei = <*>
group: Current measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Relative Level (Current)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: A
def_value: 0
permission: BOTH
get_cmd: print(smub.measure.rel.leveli)
set_cmd: smub.measure.rel.leveli = <*>
group: Current measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

## Resistance measurement
[SMUB Measure Value (Resistance)]
datatype: DOUBLE
label: Value
unit: Ohm
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smub.measure.r())
group: Resistance measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Relative Enable (Resistance)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smub.measure.rel.enabler)
set_cmd: smub.measure.rel.enabler = <*>
group: Resistance measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Relative Level (Resistance)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: Ohm
def_value: 0
permission: BOTH
get_cmd: print(smub.measure.rel.levelr)
set_cmd: smub.measure.rel.levelr = <*>
group: Resistance measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

## Power measurement
[SMUB Measure Value (Power)]
datatype: DOUBLE
label: Value
unit: W
show_in_measurement_dlg: True
permission: READ
get_cmd: print(smub.measure.p())
group: Power measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Relative Enable (Power)]
datatype: BOOLEAN
label: Relative measurement
show_in_measurement_dlg: False
def_value: False
permission: BOTH
get_cmd: print(smub.measure.rel.enablep)
set_cmd: smub.measure.rel.enablep = <*>
group: Power measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B

[SMUB Measure Relative Level (Power)]
datatype: DOUBLE
label: Value
show_in_measurement_dlg: False
unit: W
def_value: 0
permission: BOTH
get_cmd: print(smub.measure.rel.levelp)
set_cmd: smub.measure.rel.levelp = <*>
group:Power measurement
section: SMUB
model_value_1: 2602B
model_value_2: 2604B
model_value_3: 2612B
model_value_4: 2614B
model_value_5: 2634B
model_value_6: 2636B